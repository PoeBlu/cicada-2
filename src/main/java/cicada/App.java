/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package cicada;

import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.List;
import java.util.stream.Collectors;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.dataformat.yaml.YAMLFactory;

import cicada.models.Feature;
import cicada.models.Test;

public class App {
    public String getGreeting() {
        return "Hello world.";
    }

    public List<File> loadTestFiles(String testFolder) throws IOException {
        return Files
            .walk(Paths.get(this.getClass().getClassLoader().getResource(testFolder).getPath()))
            .filter(Files::isRegularFile)
            .map(p -> p.toFile())
            .collect(Collectors.toList());
    }

    public static void main(String[] args) {
        App app = new App();
        ObjectMapper mapper = new ObjectMapper(new YAMLFactory());
        TestProcessor tp = new TestProcessor();

        try {
            List<File> files = app.loadTestFiles("tests");

            for (File file : files) {
                Feature feature = mapper.readValue(file, Feature.class);
                System.out.println(feature.getDescription());

                for (Test test : feature.getTests()) {
                    System.out.println(test.getName());
                    tp.processTest(test);
                }
            }
        } catch (IOException e) {
            System.out.println(e);
        }
    }
}
